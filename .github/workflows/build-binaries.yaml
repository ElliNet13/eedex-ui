name: Build packaged binaries

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build-linux:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Electron binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/electron
          key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}

      - name: Install system dependencies for x64->x32 cross-build
        run: |
          sudo apt update
          sudo apt install -y libc6-dev-i386 gcc-multilib g++-multilib

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14
          cache: 'npm'

      - name: Install build deps
        run: npm install

      - name: Run prebuild script
        run: npm run prebuild-linux

      - name: Build for x64 / ia32
        run: ./node_modules/.bin/electron-builder build -l --x64 --ia32
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux AppImages
        uses: actions/upload-artifact@v4
        with:
          name: Linux-AppImages
          path: dist/*.AppImage
          if-no-files-found: error

      - name: Upload to GitHub Release (Linux)
        if: github.event_name == 'release'
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*.AppImage
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
